var game={
	data:null,//保存r行*c列的二维数组
	RN:4,
	CN:4,
	//强调
	//对象自己的方法，用到对象自己的属性，必须加this
	//每个属性和方法之间，都要用逗号分隔
	start:function(){//启动游戏
		//创建空数组，保存到data属性中
		//r从0开始，到<RN结束
			//向data中压入一个空数组
			//c从0开始，到<CN结束
				//向data中r行的子数组压入一个0
		this.data=[];
		for(var r=0;r<this.RN;r++){
			this.data.push([]);
			for(var c=0;c<this.CN;c++){
				this.data[r].push(0);
			}
		}
		//调用randomNum随机生成一个数
		this.randomNum();
		//调用randomNum随机生成一个数
		this.randomNum();
		this.updateView();
		//为页面绑定键盘按下
		document.onkeydown=function(e/*事件对象*/){
			//this默认->document，被bind替换为game
			//判断按键编号
			switch(e.keyCode){
				//是37就moveLeft
				case 37:this.moveLeft();break;
				//是38，就moveUP
				//case 38:this.moveUp();break;
				//是39，就moveRight
				//case 39:this.moveRight();break;
				//是40，就moveDown
				//case 40:this.moveDown();break;
			}
		}.bind(this);
		console.log(this.data.join("\n"));
	},
	//在data中一个随机空位置，生成2或4
	randomNum:function(){
		//反复
		while(true){
			//在0~RN-1之间生成一个随机整数，保存在r中
			var r=parseInt(Math.random()*this.RN);
			//在0~CN-1之间生成一个随机整数，保存在c中
			var c=parseInt(Math.random()*this.CN);
			//如果data中r行c列为0
			if(this.data[r][c]==0){
				//将data中r行c列赋值为：
				this.data[r][c]=(Math.random()<0.5?2:4);
					//0~1随机生成一个小数，如果<0.5?就赋值为2，否则赋值为4
				break;//退出循环
			}	
		}
	},
	updateView:function(){//将data的数据更新到页面
		//遍历data
		for(r=0;r<this.RN;r++){
			for(c=0;c<this.CN;c++){
				//查找id为"c"+r+c的div，保存在变量div中
				var div=document.getElementById("c"+r+c);
				//如果data中r行c列不是0
				if(this.data[r][c]!=0){
					//设置div的内容为data中r行c列的值
					div.innerHTML=this.data[r][c];
					//设置div的className属性为：
					div.className="cell n"+this.data[r][c];
						//"cell n"+data中r行c列的值
				}
				//否则
				else{
					//设置div的内容为""
					div.innerHTML="";
					//设置div的className属性为"cell"
					div.className="cell";
				}
			}
		}
	},
	moveLeft:function(){//左移所有行
		//为data拍照，保存在before
		var before=String(this.data);
		//遍历data中每一行
		for(var r=0;r<this.RN;r++){ 
			//调用moveLeftInRow左移第r行
			this.moveLeftInRow(r);
		}//遍历后
		//为data拍照，保存在after
		var after=String(this.data);
		//如果before!=after
		if(before!=after){
			//调用randomNmu随机生成一个数
			this.randomNum();
			//更新页面
			this.updataView();
		}
	},
	moveLeftInRow:function(r){//左移第r行
		//遍历data中r行每个元素，到<CN-1
		for(var r=0;r<this.CN-1;r++){
			//调用getNextInRow查找data中r行c位置右侧下一个不为0的位置，保存在nextc中
			var nextc=this.getNextInRow(r,c);
			//如果 nextc等于-1，就退出循环
			if(nextc==-1){break;}
			//否则
			else{
				//如果data中r行c列的值为0
				if(this.data[r][c]==0){
					//将nextc位置的值替换c位置的值
					this.data[r][c]=this.data[r][nextc];
						//将nextc位置的值置为0
					this.data[r][nextc]=0;
						//c留在原地
					c--;
				}
				//否则，如果c位置的值等于nextc位置的值
				else if(this.data[r][c]==this.data[r][nextc]){
					//将c位置的值*2,
					this.data[r][c]*=2;
						//将nextc位置的值置为0
					this.data[r][nextc]=0;
				}
			}	
		}
	},
	//查找r行c列右侧下一个不为0的位置
	getNextInRow:function(r,c){
		//nextc从c+1开始，遍历data中r行的每个元素，到<CN结束
		for( var nextc=c+1;nextc<this.CN;nextc++){
			//如果nextc位置的值不为0
			if(this.data[r][nextc]!=0){return nextc;}
				//返回nextc
		}//遍历结束
			//返回-1
		return -1;
	}

};
//页面加载后，自动启动游戏
window.onload=function(){
	game.start();
}
